---
title: "HW_DataLoadAndClean"
author: "Delenn Bauer"
date: "2024-04-09"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Car Insurance Data Load and Clean

### Load Libraries and Data

```{r}
library(caret)
library(neuralnet)
library(C50)
library(foreach)
library(doParallel)
library(class)
```

### Data Load

```{r}
#Downloading and Prepping the Data
carinsurance <- read.csv("Car_Insurance_Claim.csv")
carinsurance$X <- NULL
carinsurance$ID <- NULL
carinsurance$AGE <- as.factor(carinsurance$AGE)
carinsurance$GENDER <- as.factor(carinsurance$GENDER)
carinsurance$RACE <- as.factor(carinsurance$RACE)
carinsurance$DRIVING_EXPERIENCE <- as.factor(carinsurance$DRIVING_EXPERIENCE)
carinsurance$EDUCATION <- as.factor(carinsurance$EDUCATION)
carinsurance$INCOME <- as.factor(carinsurance$INCOME)
carinsurance$VEHICLE_OWNERSHIP <- as.factor(carinsurance$VEHICLE_OWNERSHIP)
carinsurance$VEHICLE_YEAR <- as.factor(carinsurance$VEHICLE_YEAR)
carinsurance$MARRIED <- as.factor(carinsurance$MARRIED)
carinsurance$CHILDREN <- as.factor(carinsurance$CHILDREN)
carinsurance$POSTAL_CODE <- as.factor(carinsurance$POSTAL_CODE)
carinsurance$VEHICLE_TYPE <- as.factor(carinsurance$VEHICLE_TYPE)
carinsurance$OUTCOME <- as.factor(carinsurance$OUTCOME)

str(carinsurance)
summary(carinsurance)
```

### Transform and Split Data

```{r, cache=TRUE}
# Using model.matrix to convert all the factors to dummy variables
carinsurance_dummy <- as.data.frame(model.matrix(~.-1,carinsurance))
str(carinsurance_dummy)

# Randomize the rows in the data (shuffling the rows)
set.seed(12345)
carinsurance_random <- carinsurance_dummy[sample(nrow(carinsurance_dummy)),]
str(carinsurance_random)
```

```{r, cache=TRUE}
#Normalize the data
normalize <- function(x) {
  return ((x - min(x)) / (max(x) - min(x)))
}

# we are going to normalize everything 
carinsurance_norm <- as.data.frame(lapply(carinsurance_random, normalize))
str(carinsurance_norm)
```

```{r, cache=TRUE}
set.seed(12345)
train_ratio = 0.7

train_rows <- sample(1:nrow(carinsurance_random), train_ratio*nrow(carinsurance_random))
```

```{r, cache=TRUE}
# LR & DT
carinsurance_train <- carinsurance_random[train_rows,]
carinsurance_test <- carinsurance_random[-train_rows,]

write.csv(carinsurance_train, "carinsurance_train.csv", row.names = FALSE)
write.csv(carinsurance_test, "carinsurance_test.csv", row.names = FALSE)
```

```{r, cache=TRUE}
# ANN
carinsurance_train_ann <- carinsurance_norm[train_rows,]
carinsurance_test_ann <- carinsurance_norm[-train_rows,]

write.csv(carinsurance_train_ann, "carinsurance_train_ann.csv", row.names = FALSE)
write.csv(carinsurance_test_ann, "carinsurance_test_ann.csv", row.names = FALSE)
```

```{r, cache=TRUE}
# KNN
carinsurance_train_knn <- carinsurance_train_ann
carinsurance_train_knn_label <- carinsurance_train$OUTCOME1
carinsurance_train_knn$OUTCOME1 <- NULL

carinsurance_test_knn <- carinsurance_test_ann
carinsurance_test_knn_label <- carinsurance_test$OUTCOME1
carinsurance_test_knn$OUTCOME1 <- NULL

write.csv(carinsurance_train_knn, "carinsurance_train_knn.csv", row.names = FALSE)
write.csv(carinsurance_test_knn, "carinsurance_test_knn.csv", row.names = FALSE)
write.csv(carinsurance_train_knn_label, "carinsurance_train_knn_label.csv", row.names = FALSE)
write.csv(carinsurance_test_knn_label, "carinsurance_test_knn_label.csv", row.names = FALSE)
```
